

plugins {
    id 'java'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id "com.modrinth.minotaur" version "2.+"
    // Adds the Kotlin Gradle plugin
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    // OPTIONAL Kotlin Serialization plugin
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.0'
}

group = 'shadow2hel'
version = '1.0-SNAPSHOT'

minecraft {
    // Sets the mappings to use those from Mojang for Minecraft 1.19.4.
    mappings channel: 'official', version: '1.19.2'

    // ...
}

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://maven.izzel.io/releases' }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        name = "betonquest-repo"
        url = "https://betonquest.org/nexus/repository/betonquest/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.19.2-43.2.0"
    compileOnly "org.spigotmc:spigot-api:1.19.2-R0.1-SNAPSHOT"
    compileOnly "io.izzel.arclight:arclight-forge-horn:1.0.1:srg"
    compileOnly "io.izzel.arclight:arclight-api:1.5.2"
    implementation fg.deobf("curse.maven:cobblemon-687131:4468321")
    compileOnly('curse.maven:architectury-419699:4384406')
    implementation('thedarkcolour:kotlinforforge:3.10.0')
    implementation "org.betonquest:betonquest:2.0.0-SNAPSHOT"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
